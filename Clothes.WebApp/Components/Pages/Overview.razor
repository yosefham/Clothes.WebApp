@page "/Overview"
@using Clothes.Api.Models
@using Clothes.WebApp.Services
@inject IItemsProviderService ItemsProviderService
@rendermode InteractiveServer

<PageTitle>Overview</PageTitle>
@if(Products?.Any() is not true )
{
    <p>Loading...</p>
}
else
{
    <ul class="row row-cols-xl-4 row-cols-lg-4 row-cols-md-3 row-cols-2 list-unstyled">
        @foreach (var product in Products)
        {
            <li class="col mb-4 ">
                <ItemComponent Item="@product"/>
            </li>
        }
    </ul>
}

@code {
     private List<Item> Products { get; set; } = [];
     private readonly FilterResource _filterResource = new();
    protected override async Task OnInitializedAsync()
    {
        _filterResource.Id = Guid.NewGuid().ToString();
        _filterResource.MinPrice = 0;
        _filterResource.MaxPrice = Decimal.MaxValue;
        
        var products = await ItemsProviderService.GetItems(_filterResource);
        Products = products is null ? [] : products.ToList();
    }  

}